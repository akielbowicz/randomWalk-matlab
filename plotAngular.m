function varargout = plotAngular(walk,varargin)
[stepAngle,~] = cart2pol(diff(walk(:,1)),diff(walk(:,2)));

plotHistogram = true;

if nargin>1
    for i=1:numel(varargin)
        if ischar(varargin{i})
            switch varargin{i}
                case 'Histogram'
                    if strcmpi(varargin{i+1},'off')
                        plotHistogram = false;
                    end
                otherwise
            end
        end
    end
end

fig= figure('Units', 'in',...
    'PaperSize',[5 5],...
    'Resize', 'off',...    'Color', 'none',...
    'Position', [1 1 5 5]);

hPolar = polaraxes('parent',fig,...
    'Position',[0.06 0.1 0.40 0.40]);
hTurn = polaraxes('parent',fig,...
    'Position',[0.55 0.1 0.40 0.40]);

colores = qualitativo(9);
if numel(stepAngle)>100
    indexForPlot = randi(length(stepAngle),100,1);
else
    indexForPlot = 1:length(stepAngle);
end

% Calculo y graficos para angulos direccionales

polarplot(hPolar,stepAngle(indexForPlot),ones(length(indexForPlot),1),...
    'LineStyle', 'none',...
    'Color', colores(3,:),...
    'Marker', '.',...
    'MarkerSize',8,...
    'DisplayName','Datos');
hold(hPolar,'on')

meanAngle = circ_mean(stepAngle);
r = circ_r(stepAngle);

set(hPolar,'RLim',[0 1.1],...
    'RTick',0:0.2:1)

legend('off','location', 'best' );
if plotHistogram
[tout,rout] = rose(stepAngle,100);

polarplot(hPolar,tout,rout/(1.1*max(rout)),...
    'Color',colores(2,:))
end

polarplot(hPolar,[0 meanAngle],[0 r],...
    'Color',colores(1,:),...
    'Marker','d',...
    'MarkerFaceColor',colores(1,:),...
    'MarkerSize',3);
hold(hPolar,'off')

dim = [0.06 0.55 0.40 0.40];
str = sprintf(['     Directional Angles \n'...
    '\\theta_{mean} = %.3g^{o} \n'...
    '\\sigma_{\\theta} = %.3g^{o}\n'...
    '\nR = %.3g \n' ...
    '\\theta_{median} = %.3g^{o} \n'...
    'p_{ray} = %.3g  \n'...
    'isUniform = %d'],...
    rad2deg(circ_mean(stepAngle)),...
    rad2deg(circ_std(stepAngle)),...
    circ_r(stepAngle),...
    rad2deg(circ_median(stepAngle)),...
    circ_rtest(stepAngle),...
    circ_rtest(stepAngle)>0.05);
annotation('textbox',dim,'String',str,...
    'LineStyle','none','FitBoxToText','off',...
    'BackgroundColor',[1 1 1],'FontSize',12)


% Calculo y graficos para angulos de giro
turnAngle = diff(stepAngle);
if numel(turnAngle)>100
    indexForPlot = randi(length(turnAngle),100,1);
else
    indexForPlot = 1:length(turnAngle);
end
polarplot(hTurn,turnAngle(indexForPlot),ones(length(indexForPlot),1),...
    'LineStyle', 'none',...
    'Color', colores(3,:),...
    'Marker', '.',...
    'MarkerSize',8,...
    'DisplayName','Datos');
hold(hTurn,'on')

meanTurnAngle = circ_mean(turnAngle);
rTurn = circ_r(turnAngle);

set(hTurn,'RLim',[0 1.1],...
    'RTick',0:0.2:1)

legend('off','location', 'best' );
if plotHistogram
[tout,rout] = rose(turnAngle,100);

polarplot(hTurn,tout,rout/(1.1*max(rout)),...
    'Color',colores(2,:))
end

polarplot(hTurn,[0 meanTurnAngle],[0 rTurn],...
    'Color',colores(1,:),...
    'Marker','d',...
    'MarkerFaceColor',colores(1,:),...
    'MarkerSize',3);
hold(hTurn,'off')

dim = [0.55 0.55 0.40 0.40];
str = sprintf(['       Turning Angles \n'...
    '\\phi_{mean} = %.3g^{o} \n'...
    '\\sigma_{\\phi} = %.3g^{o}\n'...
    '\nR = %.3g \n' ...
    '\\phi_{median} = %.3g^{o} \n'...
    'p_{ray} = %.3g  \n'...
    'isUniform = %d'],...
    rad2deg(circ_mean(turnAngle)),...
    rad2deg(circ_std(turnAngle)),...
    circ_r(turnAngle),...
    rad2deg(circ_median(turnAngle)),...
    circ_rtest(turnAngle),...
    circ_rtest(turnAngle)>0.05);
annotation('textbox',dim,'String',str,...
    'LineStyle','none','FitBoxToText','off',...
    'BackgroundColor',[1 1 1],'FontSize',12);

if nargout >0
    varargout{1} = fig;
end

